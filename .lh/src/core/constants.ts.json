{
    "sourceFile": "src/core/constants.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1692922485789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692948464464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n     // Config & environment constants.\n     static readonly CONFIG = { ...envJson.config } as unknown as EnvironmentConfig; // Data parsed from config.json files.\n     static readonly BUILD = envJson.build as unknown as EnvironmentBuild; // Build info.\n \n-    static siteurl = 'https://ilearn.sbs.edu';\n+    // static siteurl = 'https://ilearn.sbs.edu';\n \n     /**\n      * Check whether devtools should be enabled.\n      *\n"
                }
            ],
            "date": 1692922485789,
            "name": "Commit-0",
            "content": "// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport envJson from '@/assets/env.json';\nimport { EnvironmentConfig } from '@/types/config';\nimport { CoreBrowser } from '@singletons/browser';\n\n/**\n * Context levels enumeration.\n */\nexport const enum ContextLevel {\n    SYSTEM = 'system',\n    USER = 'user',\n    COURSECAT = 'coursecat',\n    COURSE = 'course',\n    MODULE = 'module',\n    BLOCK = 'block',\n}\n\nexport const enum ModPurpose {\n    MOD_PURPOSE_COMMUNICATION = 'communication',\n    MOD_PURPOSE_ASSESSMENT = 'assessment',\n    MOD_PURPOSE_COLLABORATION = 'collaboration',\n    MOD_PURPOSE_CONTENT = 'content',\n    MOD_PURPOSE_ADMINISTRATION = 'administration',\n    MOD_PURPOSE_INTERFACE = 'interface',\n    MOD_PURPOSE_OTHER = 'other',\n}\n\n/**\n * Static class to contain all the core constants.\n */\nexport class CoreConstants {\n\n    /* eslint-disable max-len */\n\n    static readonly SECONDS_YEAR = 31536000;\n    static readonly SECONDS_MONTH = 2592000;\n    static readonly SECONDS_WEEK = 604800;\n    static readonly SECONDS_DAY = 86400;\n    static readonly SECONDS_HOUR = 3600;\n    static readonly SECONDS_MINUTE = 60;\n    static readonly MILLISECONDS_YEAR = 31536000000;\n    static readonly MILLISECONDS_MONTH = 2592000000;\n    static readonly MILLISECONDS_WEEK = 604800000;\n    static readonly MILLISECONDS_DAY = 86400000;\n    static readonly MILLISECONDS_HOUR = 3600000;\n    static readonly MILLISECONDS_MINUTE = 60000;\n    static readonly MILLISECONDS_SECOND = 1000;\n    static readonly WIFI_DOWNLOAD_THRESHOLD = 104857600; // 100MB.\n    static readonly DOWNLOAD_THRESHOLD = 10485760; // 10MB.\n    static readonly MINIMUM_FREE_SPACE = 10485760; // 10MB.\n    static readonly IOS_FREE_SPACE_THRESHOLD = 524288000; // 500MB.\n    static readonly DONT_SHOW_ERROR = 'CoreDontShowError'; // @deprecated since 3.9.5. Use CoreSilentError instead.\n    static readonly NO_SITE_ID = 'NoSite';\n\n    // Settings constants.\n    static readonly SETTINGS_RICH_TEXT_EDITOR = 'CoreSettingsRichTextEditor';\n    static readonly SETTINGS_NOTIFICATION_SOUND = 'CoreSettingsNotificationSound';\n    static readonly SETTINGS_SYNC_ONLY_ON_WIFI = 'CoreSettingsSyncOnlyOnWifi';\n    static readonly SETTINGS_DEBUG_DISPLAY = 'CoreSettingsDebugDisplay';\n    static readonly SETTINGS_SEND_ON_ENTER = 'CoreSettingsSendOnEnter';\n    static readonly SETTINGS_ZOOM_LEVEL = 'CoreSettingsZoomLevel';\n    static readonly SETTINGS_COLOR_SCHEME = 'CoreSettingsColorScheme';\n    static readonly SETTINGS_ANALYTICS_ENABLED = 'CoreSettingsAnalyticsEnabled';\n    static readonly SETTINGS_DONT_SHOW_EXTERNAL_LINK_WARN = 'CoreSettingsDontShowExtLinkWarn';\n\n    // WS constants.\n    static readonly WS_TIMEOUT = 30000; // Timeout when not in WiFi.\n    static readonly WS_TIMEOUT_WIFI = 30000; // Timeout when in WiFi.\n    static readonly WS_PREFIX = 'local_mobile_'; // @deprecated since app 4.0.\n\n    // Login constants.\n    static readonly LOGIN_SSO_CODE = 2; // SSO in browser window is required.\n    static readonly LOGIN_SSO_INAPP_CODE = 3; // SSO in embedded browser is required.\n    static readonly LOGIN_LAUNCH_DATA = 'CoreLoginLaunchData';\n\n    // Download status constants.\n    static readonly DOWNLOADED = 'downloaded';\n    static readonly DOWNLOADING = 'downloading';\n    static readonly NOT_DOWNLOADED = 'notdownloaded';\n    static readonly OUTDATED = 'outdated';\n    static readonly NOT_DOWNLOADABLE = 'notdownloadable';\n\n    // Download / prefetch status icon.\n    static readonly ICON_DOWNLOADED = 'fam-cloud-done';\n    static readonly ICON_DOWNLOADING = 'spinner';\n    static readonly ICON_NOT_DOWNLOADED = 'fas-cloud-arrow-down';\n    static readonly ICON_OUTDATED = 'fam-cloud-refresh';\n    static readonly ICON_NOT_DOWNLOADABLE = '';\n\n    // General download and sync icons.\n    static readonly ICON_LOADING = 'spinner';\n    static readonly ICON_REFRESH = 'fas-rotate-right';\n    static readonly ICON_SYNC = 'fas-rotate';\n\n    // Constants from Moodle's resourcelib.\n    static readonly RESOURCELIB_DISPLAY_AUTO = 0; // Try the best way.\n    static readonly RESOURCELIB_DISPLAY_EMBED = 1; // Display using object tag.\n    static readonly RESOURCELIB_DISPLAY_FRAME = 2; // Display inside frame.\n    static readonly RESOURCELIB_DISPLAY_NEW = 3; // Display normal link in new window.\n    static readonly RESOURCELIB_DISPLAY_DOWNLOAD = 4; // Force download of file instead of display.\n    static readonly RESOURCELIB_DISPLAY_OPEN = 5; // Open directly.\n    static readonly RESOURCELIB_DISPLAY_POPUP = 6; // Open in \"emulated\" pop-up without navigation.\n\n    // Feature constants. Used to report features that are, or are not, supported by a module.\n    static readonly FEATURE_GRADE_HAS_GRADE = 'grade_has_grade'; // True if module can provide a grade.\n    static readonly FEATURE_GRADE_OUTCOMES = 'outcomes'; // True if module supports outcomes.\n    static readonly FEATURE_ADVANCED_GRADING = 'grade_advanced_grading'; // True if module supports advanced grading methods.\n    static readonly FEATURE_CONTROLS_GRADE_VISIBILITY = 'controlsgradevisbility'; // True if module controls grade visibility over gradebook.\n    static readonly FEATURE_PLAGIARISM = 'plagiarism'; // True if module supports plagiarism plugins.\n    static readonly FEATURE_COMPLETION_TRACKS_VIEWS = 'completion_tracks_views'; // True if module tracks whether somebody viewed it.\n    static readonly FEATURE_COMPLETION_HAS_RULES = 'completion_has_rules'; // True if module has custom completion rules.\n    static readonly FEATURE_NO_VIEW_LINK = 'viewlink'; // True if module has no 'view' page (like label).\n    static readonly FEATURE_IDNUMBER = 'idnumber'; // True if module wants support for setting the ID number for grade calculation purposes.\n    static readonly FEATURE_GROUPS = 'groups'; // True if module supports groups.\n    static readonly FEATURE_GROUPINGS = 'groupings'; // True if module supports groupings.\n    static readonly FEATURE_MOD_ARCHETYPE = 'mod_archetype'; // Type of module.\n    static readonly FEATURE_MOD_INTRO = 'mod_intro'; // True if module supports intro editor.\n    static readonly FEATURE_MODEDIT_DEFAULT_COMPLETION = 'modedit_default_completion'; // True if module has default completion.\n    static readonly FEATURE_COMMENT = 'comment';\n    static readonly FEATURE_MOD_PURPOSE = 'mod_purpose'; // Type of module.\n    static readonly FEATURE_RATE = 'rate';\n    static readonly FEATURE_BACKUP_MOODLE2 = 'backup_moodle2'; // True if module supports backup/restore of moodle2 format.\n    static readonly FEATURE_SHOW_DESCRIPTION = 'showdescription'; // True if module can show description on course main page.\n    static readonly FEATURE_USES_QUESTIONS = 'usesquestions'; // True if module uses the question bank.\n\n    // Possible archetypes for modules.\n    static readonly MOD_ARCHETYPE_OTHER = 0; // Unspecified module archetype.\n    static readonly MOD_ARCHETYPE_RESOURCE = 1; // Resource-like type module.\n    static readonly MOD_ARCHETYPE_ASSIGNMENT = 2; // Assignment module archetype.\n    static readonly MOD_ARCHETYPE_SYSTEM = 3; // System (not user-addable) module archetype.\n\n    // Config & environment constants.\n    static readonly CONFIG = { ...envJson.config } as unknown as EnvironmentConfig; // Data parsed from config.json files.\n    static readonly BUILD = envJson.build as unknown as EnvironmentBuild; // Build info.\n\n    static siteurl = \"https://ilearn.sbs.edu\";\n\n    /**\n     * Check whether devtools should be enabled.\n     *\n     * @returns Whether devtools should be enabled.\n     */\n    static enableDevTools(): boolean {\n        // @todo [4.0] This is not the proper way to check for development tools, we should rely only on the BUILD variable.\n        return this.BUILD.isDevelopment\n            || this.BUILD.isTesting\n            || this.CONFIG.versionname.includes('-dev')\n            || CoreBrowser.hasDevelopmentSetting('DevTools');\n    }\n\n}\n\ninterface EnvironmentBuild {\n    version: string;\n    isProduction: boolean;\n    isTesting: boolean;\n    isDevelopment: boolean;\n    lastCommitHash: string;\n    compilationTime: number;\n}\n"
        }
    ]
}